name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  verus:
    name: Run `cargo verify verus`
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@1.88.0
    - name: Install Verus
      run: |
        wget https://github.com/verus-lang/verus/releases/download/release%2F0.2025.10.05.bf8e97e/verus-0.2025.10.05.bf8e97e-x86-linux.zip
        unzip verus-0.2025.10.05.bf8e97e-x86-linux.zip
        mv verus-x86-linux ~/.cargo/bin
        cd ~/.cargo/bin
        ln -s verus-x86-linux/cargo-verus
    - name: Run test
      run: |
        cargo verus verify -- --smt-option smt.random_seed=0

  clippy:
    name: Check that clippy is happy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@1.87.0
      with:
        components: clippy
    - run: cargo clippy --target x86_64-unknown-linux-gnu --all-features

  typos:
    name: Check for typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@v1.33.1

  verusfmt:
    name: Check verusfmt formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    - name: Install verusfmt
      run: |
        cd /tmp
        git clone https://github.com/Beneficial-AI-Foundation/verusfmt
        cd verusfmt
        git checkout 025d10eeb5a98052dcb7f262e5d0102d23996809
        cargo install --path .
    - name: Run verusfmt check
      run: |
        find . -name "*.rs" -type f | xargs verusfmt --check

  check-libsignal:
    name: "`cargo check` on libsignal with this dalek-lite commit"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout dalek-lite
      uses: actions/checkout@v4
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@1.88.0
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler cmake pkg-config clang
    - name: Get libsignal
      run: |
        cd ..
        git clone https://github.com/Beneficial-AI-Foundation/libsignal
        cd libsignal
        git checkout frozen_for_ci
    - name: Patch libsignal's Cargo.toml with current dalek-lite commit
      run: |
        DALEK_COMMIT=$(git rev-parse HEAD)
        echo "dalek-lite commit: $DALEK_COMMIT"
        cd ../libsignal
        if ! grep -q "14d41a27fc63" Cargo.toml; then
          echo "Error: Placeholder 14d41a27fc63 not found in Cargo.toml"
          exit 1
        fi
        sed -i "s/14d41a27fc63/$DALEK_COMMIT/g" Cargo.toml
    - name: Run test
      run: |
        cd ../libsignal
        cargo check

  verify-libsignal-usernames:
    name: "Verus on libsignal/rust/usernames with this dalek-lite commit"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout dalek-lite
      uses: actions/checkout@v4
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@1.88.0
    - name: Install Verus
      run: |
        wget https://github.com/verus-lang/verus/releases/download/release%2F0.2025.10.05.bf8e97e/verus-0.2025.10.05.bf8e97e-x86-linux.zip
        unzip verus-0.2025.10.05.bf8e97e-x86-linux.zip
        mv verus-x86-linux ~/.cargo/bin
        cd ~/.cargo/bin
        ln -s verus-x86-linux/cargo-verus
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler cmake pkg-config clang
    - name: Get libsignal
      run: |
        cd ..
        git clone https://github.com/Beneficial-AI-Foundation/libsignal
        cd libsignal
        git checkout frozen_for_ci_v0.84.0
    - name: Patch libsignal's Cargo.toml with current dalek-lite commit
      run: |
        DALEK_COMMIT=$(git rev-parse HEAD)
        echo "dalek-lite commit: $DALEK_COMMIT"
        cd ../libsignal
        if ! grep -q "14d41a27fc63" Cargo.toml; then
          echo "Error: Placeholder 14d41a27fc63 not found in Cargo.toml"
          exit 1
        fi
        sed -i "s/14d41a27fc63/$DALEK_COMMIT/g" Cargo.toml
    - name: Run test
      run: |
        cd ../libsignal/rust/usernames
        cargo verus verify

  update-verification-charts:
    name: Update verification analysis and charts
    runs-on: ubuntu-latest
    # Only run on push to main, not on PRs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for temporal charts
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      run: pip install uv
    
    - name: Analyze Verus specs and proofs
      run: ./scripts/analyze_verus_specs_proofs.py
    
    - name: Check if CSV changed
      id: csv-check
      run: |
        if git diff --exit-code outputs/curve25519_functions.csv; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Generate charts
      if: steps.csv-check.outputs.changed == 'true'
      run: |
        echo "CSV changed, regenerating charts..."
        ./scripts/plot_progress.py
        ./scripts/plot_progress_over_time.py --max-commits 200 --sample 3
        
        # Copy to docs directory
        mkdir -p docs/outputs
        cp outputs/verification_funnel.png docs/outputs/
        cp outputs/absolute_counts_over_time.png docs/outputs/
        cp outputs/module_breakdown.png docs/outputs/
        cp outputs/progress_over_time.png docs/outputs/
        cp outputs/verus_breakdown.png docs/outputs/
        cp outputs/overall_progress.png docs/outputs/
        cp outputs/comparison_pie.png docs/outputs/
        cp outputs/verification_velocity.png docs/outputs/
    
    - name: Commit and push changes
      if: steps.csv-check.outputs.changed == 'true'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add outputs/curve25519_functions.csv outputs/*.png docs/outputs/*.png
        git commit -m "Auto-update verification analysis and charts [skip ci]"
        git push
    
    - name: Summary
      run: |
        if [ "${{ steps.csv-check.outputs.changed }}" == "true" ]; then
          echo "✅ Verification data updated and charts regenerated"
        else
          echo "ℹ️ No changes detected in verification status"
        fi
