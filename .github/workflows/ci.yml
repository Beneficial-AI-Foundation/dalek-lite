name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  verus:
    name: Run `cargo verify verus`
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@1.88.0
    - name: Install Verus (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget https://github.com/verus-lang/verus/releases/download/release%2F0.2025.08.01.33c6cec/verus-0.2025.08.01.33c6cec-x86-linux.zip
        unzip verus-0.2025.08.01.33c6cec-x86-linux.zip
        mv verus-x86-linux ~/.cargo/bin
        cd ~/.cargo/bin
        ln -s verus-x86-linux/cargo-verus
    - name: Install Verus (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        wget https://github.com/verus-lang/verus/releases/download/release%2F0.2025.08.01.33c6cec/verus-0.2025.08.01.33c6cec-x86-macos.zip
        unzip verus-0.2025.08.01.33c6cec-x86-macos.zip
        mv verus-x86-macos ~/.cargo/bin
        cd ~/.cargo/bin
        ln -s verus-x86-macos/cargo-verus
    - name: Run test
      run: |
        cargo verus verify -- --smt-option smt.random_seed=0

  rustfmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - run: cargo fmt --all -- --check

  clippy:
    name: Check that clippy is happy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@1.87.0
      with:
        components: clippy
    - run: cargo clippy --target x86_64-unknown-linux-gnu --all-features

  typos:
    name: Check for typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@v1.33.1
